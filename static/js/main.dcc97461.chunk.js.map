{"version":3,"sources":["GameStats.js","App.js","index.js"],"names":["GameStats","props","games","wins","loses","App","useState","coinSide","setSide","totalGames","setTotal","totalWins","setWin","totalLoses","setLos","arr","onClick","console","log","indexNumber","Math","floor","random","length","alert","prevTotal","prevWin","prevLos","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAaeA,EAXG,SAACC,GACf,OACI,oCACI,+CACA,qDAA0B,8BAAOA,EAAMC,QACvC,+CAAoB,8BAAOD,EAAME,OACjC,8CAAmB,8BAAOF,EAAMG,UCuD7BC,MAvDf,WAAgB,IAAD,EAEeC,mBAAS,KAFxB,mBAENC,EAFM,KAEIC,EAFJ,OAGkBF,mBAAS,GAH3B,mBAGNG,EAHM,KAGMC,EAHN,OAIeJ,mBAAS,GAJxB,mBAINK,EAJM,KAIKC,EAJL,OAKgBN,mBAAS,GALzB,mBAKNO,EALM,KAKMC,EALN,KAoBPC,EAAM,CAAC,QAAS,SAuBtB,OACE,oCACE,mDACA,oDACA,4BAAQC,QAvCZ,WACER,EAAQ,WAsCN,SAHF,OAGuD,4BAAQQ,QAjCjE,WACER,EAAQ,WAgC+C,SACrD,8CAAmB,8BAAOD,IAC1B,4BAAQS,QA3BZ,WACEC,QAAQC,IAAIX,GACZ,IAAMY,EAAeC,KAAKC,MAAMD,KAAKE,SAAWP,EAAIQ,QACnC,MAAbhB,GACFU,QAAQC,IAAIC,GACZK,MAAM,0BAECjB,IAAaQ,EAAII,IACxBK,MAAM,OACNd,GAAS,SAACe,GAAD,OAAeA,EAAY,KACpCjB,EAAQ,KACRI,GAAO,SAACc,GAAD,OAAaA,EAAU,OAG9BF,MAAM,QACNd,GAAS,SAACe,GAAD,OAAeA,EAAY,KACpCjB,EAAQ,KACRM,GAAO,SAACa,GAAD,OAAaA,EAAU,QAU9B,QACA,kBAAC,EAAD,CAAWzB,MAAOO,EAAYN,KAAMQ,EAAWP,MAAOS,MCrD5De,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAE,EAAF,OAEFC,SAASC,eAAe,W","file":"static/js/main.dcc97461.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst GameStats = (props) => {\r\n    return (\r\n        <>\r\n            <h2>Game statistics</h2>\r\n            <p>Total number of games: <span>{props.games}</span></p>\r\n            <p>Number of wins:  <span>{props.wins}</span></p>\r\n            <p>Number of los:  <span>{props.loses}</span></p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameStats","import React, { useState, } from 'react'\nimport GameStats from './GameStats.js'\n// import PlayBtn from './PlayBtn'\n\n\n\n\n\nfunction App() {\n\n  const [coinSide, setSide] = useState('?');\n  const [totalGames, setTotal] = useState(0);\n  const [totalWins, setWin] = useState(0);\n  const [totalLoses, setLos] = useState(0);\n\n\n  function handleChooseHead() {\n    setSide('Heads')\n    // headSide.current.innerHTML = ('Head');\n    // console.log(headSide.current.innerHTML)\n  }\n\n  function handleChooseTail() {\n    setSide('Tails')\n    // headSide.current.innerHTML = ('Tail');\n    // console.log(headSide.current)\n  }\n\n  const arr = ['Heads', 'Tails']\n\n  function checkWin() {\n    console.log(coinSide)\n    const indexNumber = (Math.floor(Math.random() * arr.length));\n    if (coinSide === '?') {\n      console.log(indexNumber)\n      alert('Choose Your coin side')\n    }\n    else if (coinSide === arr[indexNumber]) {\n      alert('win');\n      setTotal((prevTotal) => prevTotal + 1);\n      setSide('?');\n      setWin((prevWin) => prevWin + 1);\n\n    } else {\n      alert('lose');\n      setTotal((prevTotal) => prevTotal + 1);\n      setSide('?');\n      setLos((prevLos) => prevLos + 1);\n    }\n  }\n\n  return (\n    <>\n      <h1>Heads or Tails Game</h1>\n      <p>Choose Your coin side</p>\n      <button onClick={handleChooseHead}>Heads</button> or <button onClick={handleChooseTail}>Tails</button>\n      <p>your choice is: <span>{coinSide}</span></p>\n      <button onClick={checkWin}>Play</button>\n      <GameStats games={totalGames} wins={totalWins} loses={totalLoses} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode >\n    < App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}